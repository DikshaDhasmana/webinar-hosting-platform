version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: webinar_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: webinar_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - webinar_network

  # Redis for caching and pub/sub
  redis:
    image: redis:7.0-alpine
    container_name: webinar_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - webinar_network

  # Node.js Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webinar_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/webinar_db?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=your_super_secret_jwt_key_change_in_production
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./recordings:/app/recordings
      - .:/app
      - /app/node_modules
    networks:
      - webinar_network

volumes:
  mongodb_data:
  redis_data:

networks:
  webinar_network:
    driver: bridge